# nginx
# 全局配置块
worker_processes auto;                   #根据核心自动设置工作进程数
error_log /var/log/nginx/error.log warn; # 错误日志路径和级别
pid /var/run/nginx.pid;                  # 进程PID文件

# 事件模块配置
events {
    worker_connections 1024;# 单个工作进程的最大连接数
    multi_accept on;    
    use epoll;
}

# http配置模块
http {
    # 基础配置
    include /etc/nginx/mime.types;
    
   
    # 日志格式定义
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
     # 性能优化相关
    sendfile        on;          # 启用高效文件传输模式
    tcp_nopush      on;          # 在 sendfile 模式下优化网络包传输
    tcp_nodelay     on;          # 禁用 Nagle 算法
    keepalive_timeout  65;       # 保持连接的超时时间

    # 访问日志路径
    access_log /var/log/nginx/access.log main; 

    # Gzip 压缩配置
    gzip  on;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;
    gzip_min_length 1000;
    gzip_comp_level 5;

    # 安全头配置
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # SSL 优化配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 上游服务器配置（负载均衡）
    upstream backend {
        # least_conn;             # 使用最少连接算法
        server project-api-1;     # 权重 3
        keepalive 32;             # 保持的长连接数
    }

    upstream login {
    # least_conn;             # 使用最少连接算法
        server project-api-2;     # 权重 3
        keepalive 32;             # 保持的长连接数
    }

    # 虚拟主机配置
    server {
        listen 80;              # 监听 HTTP 端口
        server_name localhost;
        return 301 https://$host$request_uri; # HTTP 重定向到 HTTPS
    }

    server {
        listen 443 ssl;   # 监听 HTTPS 端口
        server_name localhost;
        http2 on;

        # SSL 证书配置
        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/certs/localhost.key;

        # # 静态文件服务配置
        # location /static {
        #     alias /var/www/static;
        #     expires 1y;         # 设置长期缓存
        #     access_log off;    # 关闭访问日志
        #     add_header Cache-Control "public";
        # }

       

        location /project/login {
            proxy_pass http://login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
        }
        

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
        }

        # 错误页面定制
        error_page 404 /404.html;
            location = /404.html {
                internal;
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /usr/share/nginx/html;
        }
    }
}